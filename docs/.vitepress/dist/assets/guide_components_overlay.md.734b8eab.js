import{_ as e,b as a,e as t,j as s}from"./app.4bdd4f75.js";const m='{"title":"Overlay (BonesOverlay)","description":"","frontmatter":{},"headers":[{"level":2,"title":"Overview","slug":"overview"},{"level":2,"title":"Component parts","slug":"component-parts"},{"level":2,"title":"Slots","slug":"slots"},{"level":2,"title":"Component Type","slug":"component-type"},{"level":2,"title":"Examples","slug":"examples"},{"level":3,"title":"Code","slug":"code"}],"relativePath":"guide/components/overlay.md"}',o={name:"guide/components/overlay.md"},n=s(`<div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>While the documentation is fairly complete, it is still in first draft.</p></div><h1 id="overlay-bonesoverlay" tabindex="-1">Overlay (BonesOverlay) <a class="header-anchor" href="#overlay-bonesoverlay" aria-hidden="true">#</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-hidden="true">#</a></h2><p>The Barebones <code>Overlay</code> component is designed to wrap the Barebones <code>Modal</code> component. The <code>Overlay</code> component may also come in useful when building pop out menus or other components that need to sit above the rest of your application.</p><h2 id="component-parts" tabindex="-1">Component parts <a class="header-anchor" href="#component-parts" aria-hidden="true">#</a></h2><table><thead><tr><th>Part name</th><th>Description</th></tr></thead><tbody><tr><td>component</td><td>The components root element.</td></tr><tr><td>overlayInner</td><td>Component that sits directly inside the root and contains the default slot</td></tr></tbody></table><h2 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-hidden="true">#</a></h2><table><thead><tr><th>Slot name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>The <code>default</code> slot is provided by Vue</td></tr></tbody></table><h2 id="component-type" tabindex="-1">Component Type <a class="header-anchor" href="#component-type" aria-hidden="true">#</a></h2><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Overlay</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">parts</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Parts</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-hidden="true">#</a></h2><h3 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-hidden="true">#</a></h3><div class="language-html"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">BonesOverlay</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">BonesOverlay</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,13),l=[n];function r(p,c,d,i,h,y){return a(),t("div",null,l)}var u=e(o,[["render",r]]);export{m as __pageData,u as default};
