import{_ as e,c as t,o,a as s}from"./app.1ec7c2b4.js";const y='{"title":"Modal (BonesModal)","description":"","frontmatter":{},"headers":[{"level":2,"title":"Overview","slug":"overview"},{"level":2,"title":"Component parts","slug":"component-parts"},{"level":2,"title":"Slots","slug":"slots"},{"level":2,"title":"Component Type","slug":"component-type"}],"relativePath":"guide/components/modal.md"}',a={name:"guide/components/modal.md"},d=s(`<h1 id="modal-bonesmodal" tabindex="-1">Modal (BonesModal) <a class="header-anchor" href="#modal-bonesmodal" aria-hidden="true">#</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-hidden="true">#</a></h2><p>The Barebones <code>Modal</code> component is wrapped by the Barebones <code>Overlay</code> component. The <code>Modal</code> component has buttons to trigger display and a focus trap to prevent keyboard users from accessing other parts of the application when the <code>Modal</code> component is displayed.</p><h2 id="component-parts" tabindex="-1">Component parts <a class="header-anchor" href="#component-parts" aria-hidden="true">#</a></h2><table><thead><tr><th>Part name</th><th>Description</th></tr></thead><tbody><tr><td>component</td><td>The components root element.</td></tr><tr><td>titleWrapper</td><td>Element that wraps the title slot.</td></tr><tr><td>modalClose</td><td>The Modal close button element. This button is only visible if the <code>showCloseButton</code> props is set to <code>BOTH</code> or <code>MODAL</code></td></tr><tr><td>overlayClose</td><td>The Overlay close button element. This button is only visible if the <code>showCloseButton</code> props is set to <code>BOTH</code> or <code>OVERLAY</code>.</td></tr></tbody></table><table><thead><tr><th>Prop name</th><th>Description</th></tr></thead><tbody><tr><td>showCloseButton</td><td><code>showCloseButton</code> accepts one of three states: <code>MODAL</code>, <code>OVERLAY</code>, and <code>BOTH</code> - It is best to import these constants from the Barebones package <code>import {CLOSE_BUTTON_DISPLAYS } from &quot;@barebones/constants/modal&quot;</code> as button display names may change. The <code>showCloseButton</code> prop controls which close buttons are displayed. By default, this is set to <code>MODAL</code></td></tr><tr><td>modalOpenProps</td><td><code>modalOpenProps</code> allows you to pass props to the open button which is a Barebones <code>Button</code> component.</td></tr></tbody></table><h2 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-hidden="true">#</a></h2><table><thead><tr><th>Slot name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>The <code>default</code> slot is provided by Vue displays the main content in the modal.</td></tr><tr><td>title</td><td>The <code>title</code> slot is designed to accept a text title</td></tr><tr><td>modalClose</td><td>The <code>modalClose</code> slot defaults the the text &quot;close&quot;, but you can pass an Icon or alternative text. This button is only visible if the <code>showCloseButton</code> props is set to <code>both</code> or <code>modal</code>.</td></tr><tr><td>overlayClose</td><td>The <code>overlayClose</code> slot defaults the the text &quot;close&quot;, but you can pass an Icon or alternative text. This button is only visible if the <code>showCloseButton</code> props is set to <code>both</code> or <code>overlay</code>.</td></tr></tbody></table><h2 id="component-type" tabindex="-1">Component Type <a class="header-anchor" href="#component-type" aria-hidden="true">#</a></h2><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Modal</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">parts</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Parts</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,10),n=[d];function l(c,r,p,i,h,m){return o(),t("div",null,n)}var b=e(a,[["render",l]]);export{y as __pageData,b as default};
